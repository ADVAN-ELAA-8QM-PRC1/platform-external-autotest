# Copyright (c) 2012 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import logging

from autotest_lib.client.common_lib import utils
from autotest_lib.client.common_lib.cros import dev_server
from autotest_lib.server import host_attributes

AUTHOR = "Chrome OS Team"
NAME = "platform_InstallTestImage"
TIME = "MEDIUM"
TEST_CATEGORY = "Install"
TEST_CLASS = "platform"
TEST_TYPE = "server"

DOC = """
This test installs a specified test image onto a servo-connected DUT.
The principle purpose is to allow installing a known-good image onto
a wedged unit that would otherwise have to be re-imaged manually.

Here is the command to install a recovery image with a locally attached
servo:
    run_remote_tests --args="image=$IMAGE_PATH" \
                     --servo --remote=$IP_ADDRESS --board=$BOARD \
                     platform_InstallTestImage
"""

args_dict = utils.args_to_dict(args)
servo_args = hosts.SiteHost.get_servo_arguments(args_dict)

def run(machine):
    # Setup the client machine.
    host = hosts.create_host(machine, servo_args=servo_args)
    image = args_dict.get("image", None)
    if image is None:
        attributes = host_attributes.host_attributes(machine)
        if hasattr(attributes, 'board'):
            board = attributes.board
            image = dev_server.ImageServer.devserver_url_for_servo(board)
            logging.info("image URL is %s", image)
    job.run_test("platform_InstallTestImage", host=host,
                 disable_sysinfo=True, image_url=image)

parallel_simple(run, machines)
