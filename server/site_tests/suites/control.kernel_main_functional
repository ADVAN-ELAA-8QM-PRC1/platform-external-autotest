# Copyright (c) 2011 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

AUTHOR = "Chrome OS Team"
NAME = "Kernel Main Functional"
TIME = "SHORT"
TEST_CATEGORY = "Kernel Functional"
TEST_CLASS = "suite"
TEST_TYPE = "server"

DOC = """This test suite runs automated tests that should all pass
and that verifies that system calls do not crash with errorneous input
and other miscellaneous attributes of the kernel."""

from autotest_lib.client.cros import cros_logging
from autotest_lib.server import site_host_attributes


# List of tests to be run.
CLIENT_TESTS = [
    # Call every syscall sequentially with special value in a single
    # register.  The special value will be rotated through each
    # register parameter.
    ('scrashme', { 'args_list': '--mode rotate' }),

    # Pass # pointer to 'structs filled with 0xd5'.
    ('scrashme', { 'args_list': '--mode rotate -SD5' }),

    # Use zero as all regparms.
    ('scrashme', { 'args_list': '--mode rotate -z' }),
]

SERVER_TESTS = [
    ('platform_BootDevice', {'iterations': 100, 'tag': 'stress'}),
    ('platform_KernelErrorPaths', {'iterations': 10}),
]


def run_client_test(machine):
    client = hosts.create_host(machine)

    client_at = autotest.Autotest(client)
    for test, argv in CLIENT_TESTS:
        client_at.run_test(test, **argv)


def run_server_test(machine):
    client = hosts.create_host(machine)
    for test, argv in SERVER_TESTS:
        job.run_test(test, host=client, **argv)


job.parallel_on_machines(run_client_test, machines)
parallel_simple(run_server_test, machines)
