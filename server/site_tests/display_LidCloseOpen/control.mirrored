# Copyright 2014 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from autotest_lib.server import utils

AUTHOR = "chromeos-chameleon"
NAME = "display_LidCloseOpen.mirrored"
PURPOSE = "Remotely controlled close and open lid test."
CRITERIA = "This test will fail if checks mentioned below fail."
SUITE = "chameleon_dp,chameleon_hdmi"
TIME = "LONG"
TEST_CATEGORY = "Functional"
TEST_CLASS = "display"
TEST_TYPE = "server"
DEPENDENCIES = 'chameleon,servo'

DOC = """
This test remotely emulates external display lid close/open scenario.
This test will fail if DUT doesn't
 - go to docked mode
 - return to the original mode
 - suspend after unplug in docked mode
 - resume after open
 - pass image test
"""

args_dict = utils.args_to_dict(args)
chameleon_args = hosts.CrosHost.get_chameleon_arguments(args_dict)
servo_args = hosts.CrosHost.get_servo_arguments(args_dict)

def run(machine):
    host = hosts.create_host(machine, chameleon_args=chameleon_args,
                             servo_args=servo_args)
    job.run_test("display_LidCloseOpen", host=host, test_mirrored=True,
                 tag="mirrored")

parallel_simple(run, machines)
