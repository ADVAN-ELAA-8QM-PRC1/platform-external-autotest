# Copyright 2016 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from autotest_lib.server import utils

AUTHOR = "harpreet@chromium.org"
NAME = "enterprise_CFM_SessionStressServer"
TIME = "SHORT"
TEST_CATEGORY = "Functional"
TEST_CLASS = "enterprise"
TEST_TYPE = "server"
ATTRIBUTES = "suite:hotrod"

DOC = """
This test clears the TPM and enables the appropriate usb port on the servo
before kicking off a client side test that enrolls the device into CFM. Once
the device in enrolled, a different client test is kicked off to stress test
the device by starting and ending new hangout sessions. This is repeated for
the number of times defined below which can be overwritten by an arg passed
via command propmt when run manually.
"""

args_dict = utils.args_to_dict(args)
servo_args = hosts.CrosHost.get_servo_arguments(args_dict)

def run_test(machine):
    host = hosts.create_host(machine, servo_args=servo_args)
    repeat = int(args_dict.get('repeat', 1000))

    job.run_test('enterprise_CFM_SessionStressServer',
                 host=host,
                 repeat=repeat)


parallel_simple(run_test, machines)
