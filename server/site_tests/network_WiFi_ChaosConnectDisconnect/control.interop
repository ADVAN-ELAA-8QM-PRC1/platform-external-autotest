# Copyright (c) 2013 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

AUTHOR = 'krisr, wiley, jabele'
NAME = 'network_WiFi_ChaosConnectDisconnect.interop'
TIME = 'LONG'
ATTRIBUTES = "suite:wifi_interop"
SUITE = 'wifi_interop'
TEST_TYPE = 'server'
DEPENDENCIES = 'chaos_dut'

DOC = """
This script iterates through the StaticAPs configured for WPA2PSK in the AP
compatibility lab and has a chrome device connect to each in series. This test
must be performed in the AP compatibility lab and is intended to be run via
suite_scheduler.
"""

from autotest_lib.server.cros.chaos_ap_configurators import ap_spec
from autotest_lib.server.cros.chaos_lib import chaos_runner

def run_chaos_interop(machine):
    host = hosts.create_host(machine)
    ap_specs = [ap_spec.APSpec(security=ap_spec.SECURITY_TYPE_WPA2PSK,
                               band=ap_spec.BAND_2GHZ,
                               configurator_type=ap_spec.CONFIGURATOR_STATIC),
                ap_spec.APSpec(security=ap_spec.SECURITY_TYPE_WPA2PSK,
                               band=ap_spec.BAND_5GHZ,
                               configurator_type=ap_spec.CONFIGURATOR_STATIC),
                # Non-US models, which are all static
                ap_spec.APSpec(security=ap_spec.SECURITY_TYPE_WPA2PSK,
                               band=ap_spec.BAND_5GHZ,
                               channel=48,
                               configurator_type=ap_spec.CONFIGURATOR_STATIC)]

    for spec in ap_specs:
        runner = chaos_runner.ChaosRunner(
                'network_WiFi_ChaosConnectDisconnect', host, spec)
        # Do not collect logs for suite_schedule runs
        runner.run(job, disabled_sysinfo=True)


parallel_simple(run_chaos_interop, machines)
