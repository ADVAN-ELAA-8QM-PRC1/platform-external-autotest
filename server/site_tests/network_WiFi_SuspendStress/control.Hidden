# Copyright (c) 2015 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

AUTHOR = 'krisr, tienchang, bmahadev'
NAME = 'network_WiFi_SuspendStress.Hidden'
TIME = 'MEDIUM'
TEST_TYPE = 'Server'
DEPENDENCIES = 'servo, wificell'
ATTRIBUTES = "suite:wifi_matfunc, suite:wifi_matfunc_bcm4356, suite:wifi_matfunc_intel7265, suite:wifi_matfunc_marvell8897"
SUITE = ('wifi_matfunc, wifi_matfunc_bcm4356, wifi_matfunc_marvell8897,'
         'wifi_matfunc_intel7265')
DOC = """
This test uses servo to simulate lid close and open events and checks that the
wifi adapter is brought back up and connects to a hidden network.
"""

import copy

from autotest_lib.client.common_lib.cros.network import xmlrpc_datatypes
from autotest_lib.server.cros.network import hostap_config
from autotest_lib.server import utils

args_dict = utils.args_to_dict(args)
servo_args = hosts.CrosHost.get_servo_arguments(args_dict)

def run(machine):
    host = hosts.create_host(machine, servo_args=servo_args)
    g = hostap_config.HostapConfig.MODE_11G
    n = hostap_config.HostapConfig.MODE_11N_PURE
    assoc_params = xmlrpc_datatypes.AssociationParameters()
    assoc_params.is_hidden = True
    configurations = [
            (hostap_config.HostapConfig(channel=6, mode=g, hide_ssid=True),
             copy.copy(assoc_params)),
            (hostap_config.HostapConfig(channel=36, mode=n, hide_ssid=True),
             copy.copy(assoc_params)),
            (hostap_config.HostapConfig(channel=48, mode=n, hide_ssid=True),
             copy.copy(assoc_params))]

    job.run_test('network_WiFi_SuspendStress',
                 host=host,
                 tag=NAME.split('.')[1],
                 suspends=5,
                 raw_cmdline_args=args,
                 additional_params=configurations)

parallel_simple(run, machines)
