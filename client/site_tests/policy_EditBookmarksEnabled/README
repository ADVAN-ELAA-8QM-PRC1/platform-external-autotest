Usage Guide
===========
From chroot of your Chromium OS client, run the test remotely using test_that:
$ test_that |-b <board>| <IPAddress> policy_EditBookmarksEnabled |<arguments>|

On your Chrome OS device, run the test locally from the command line:
$ /usr/local/autotest/bin/autotest /usr/local/autotest/tests/
  policy_EditBookmarksEnabled/control <arguments>

When no arguments are given, then all test cases defined in the test are run,
using the AutoTest fake DM Server to setup and download policy.

Use the case argument to run a single test case. E.g.:
--args='case=True_Enabled'
--args='case=False_Disabled'
--args='case=NotSet_Enabled'

Use the env argument to select the environment parameters used during the test.
The env argument determines which GAIA login server and DMServer will be used
by Chrome OS to authenticate user sign-ins and to download policies. Use the
dm-fake environment for your test to set up policies on the local AutoTest
fake DM Server. Note that your tests cannot set up policies on the DMServer in
the production, staging, or test environments.

Valid values for env are:
  prod     - Production: DMServer and GAIA in production.
  cr-qa    - Staging: crosman-qa DMS in staging and GAIA in production.
  cr-alpha - Staging: crosman-alpha DMS in staging and GAIA in staging.
  dm-test  - Test: YAPS Python server on chromium-dm-test.appspot.com, and
             GAIA in production.
  dm-fake  - (default) AutoTest: local Fake DMServer, and fake user.

When you select an environment other than the default 'dm-fake', you
must provide the user credentials for that environment. E.g.:
--args='env=crosman-qa username=tester1@testdomain.com password=test1234'

When using env=dm-test, you must specify the dms_name for your instance of the
chromium-dm-test service. E.g.:
--args='env=dm-test dms_name=xot-dmst username=...'


Argument Examples for policy_EditBookmarksEnabled tests
=======================================================

Local Command Line Args
-----------------------
Fake, Run All:
/usr/local/autotest/bin/autotest /usr/local/autotest/tests/policy_EditBookmarksEnabled/control --args="env=dm-fake"

Production Environment: case=NotSet_Enabled:
/usr/local/autotest/bin/autotest /usr/local/autotest/tests/policy_EditBookmarksEnabled/control --args="case=NotSet_Enabled env=prod username=sal1@crosprqa1.com password=test1234"

YAPS Environment: mode=Single, case=True:
/usr/local/autotest/bin/autotest /usr/local/autotest/tests/policy_EditBookmarksEnabled/control --args="case=True_Enabled env=dm-test dms_name=xot-dmst username=dadm@crosprqa3.com password=test1234"

Remote Command Line Args
------------------------
For comparison, here are equivalent commands to run using test_that (from within chroot):
test_that 100.96.49.89 policy_EditBookmarksEnabled --args="env=dm-fake"

test_that 100.96.49.89 policy_EditBookmarksEnabled --args="case=NotSet_Enabled env=prod username=sal1@crosprqa1.com password=test1234 value=None"

test_that 100.96.49.89 policy_EditBookmarksEnabled --args="case=True_Enabled env=dm-test dms_name=xot-dmst username=dadm@crosprqa3.com password=test1234"

