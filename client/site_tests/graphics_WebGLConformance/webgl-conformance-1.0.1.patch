Only in src/WebGL: WebGL
Common subdirectories: scripts/WebGL/conformance and src/WebGL/conformance
Common subdirectories: scripts/WebGL/extra and src/WebGL/extra
Common subdirectories: scripts/WebGL/misc and src/WebGL/misc
Common subdirectories: scripts/WebGL/resources and src/WebGL/resources
diff -c scripts/WebGL/webgl-conformance-tests.html src/WebGL/webgl-conformance-tests.html
*** scripts/WebGL/webgl-conformance-tests.html	Wed Aug 17 03:22:13 2011
--- src/WebGL/webgl-conformance-tests.html	Wed Aug 17 20:40:19 2011
***************
*** 227,232 ****
--- 227,268 ----
      }
    };
  
+   // send results to autotest graphics_WebGLConformance.py
+   Reporter.prototype.postFinalResults = function(summary) {
+     var xhr = new XMLHttpRequest();
+     xhr.open('POST', 'http://localhost:8000/WebGL/results', false);
+     xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
+     xhr.onreadystatechange = function() {
+       if (xhr.readyState != 4) { return; }
+     }
+     msg = "";
+     var totalPages = 0;
+     var totalSuccessfulPages = 0;
+     var totalTests = 0;
+     var totalSuccessful = 0;
+     var totalTimeouts = 0;
+ 
+     for (var url in this.pagesByURL) {
+       var page = this.pagesByURL[url];
+       ++totalPages;
+       totalTests += page.totalTests;
+       totalSuccessful += page.totalSuccessful;
+       totalTimeouts += page.totalTimeouts;
+       pageFailures = page.totalTests - page.totalSuccessful;
+       if (pageFailures == 0) 
+         ++totalSuccessfulPages;
+       else
+         msg = msg + "&" + escape("failed_url:" + url) + "=" + pageFailures;
+     }
+     // pages or group counts (coarse)
+     msg = msg + "&gtotal=" + totalPages + "&gpass=" + totalSuccessfulPages;
+     // individual test counts (fine)
+     msg = msg + "&ttotal=" + totalTests + "&tpass=" + totalSuccessful;
+     msg = msg + "&ttimeout=" + totalTimeouts;
+     // copy of the text summary to store on the file system
+     msg = msg + "&summary=" + escape(summary);
+     xhr.send(msg);
+   }
    Reporter.prototype.displayFinalResults = function(msg, success) {
      if (success) {
        var totalTests = 0;
***************
*** 281,289 ****
--- 317,329 ----
        while (r.firstChild) r.removeChild(r.firstChild);
        r.appendChild(document.createTextNode(tx));
        document.getElementById("showTextSummary").style.visibility = "visible";
+       // send results to autotest graphics_WebGLConformance
+       this.postFinalResults(tx);
      } else {
        var e = document.getElementById("error");
        e.innerHTML = msg;
+       // send results to autotest graphics_WebGLConformance
+       this.postFinalResults("Error: " + msg);
      }
    };
  
***************
*** 340,345 ****
--- 380,387 ----
      var elem = document.getElementById("nowebgl");
      elem.style.display = "";
    }
+   // automatically start for autotest graphics_WebGLConformance
+   testHarness.runTests();
  }
  </script>
  </head>
